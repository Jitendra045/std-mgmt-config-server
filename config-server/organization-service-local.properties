server.port= 9001
spring.application.name=organization-service-local
#url for webClient
webservice.resultservice.url=http://result-service-local
webservice.examservice.url=http://exam-service-local

#Student service
request.organizationservice.post.exam=/api/exam/add
request.organizationservice.get.getResutlOfStudentByStudentUsername=/api/result/
request.organizationservice.get.getAllResult=/api/result
request.organizationservice.post.result=/api/result/add

#seluth and zipkin for tracing request
management.zipkin.tracing.endpoint=http://localhost:9411
management.tracing.sampling.probability= 1.0

#database configuration
spring.datasource.jdbc-url=jdbc:postgresql://localhost:5432/studentmgmt
#encrypted using jaspy 
#spring.datasource.username=ENC(L0RS5jfzU+xCCOe+32PIfYKRbMClX89cB6SN0B+z7g17HqJURzdGAk0/6o90j5Iz)
#spring.datasource.password=ENC(W4MyospuXt209hKIeYbXtylUw0xJE6p2QP0T6FuQZ9bMXKSDLZiVurwOiYsHvA7A)//postgres
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

#eureka configuration
#discovery server
eureka.client.serviceUrl.defaultZone =http://localhost:8761/eureka


#to resolve Failed to resolve 'exam-service-local' [A(1)] after 2 queries  expetion webclientrequestexception
eureka.instance.hostname=localhost






